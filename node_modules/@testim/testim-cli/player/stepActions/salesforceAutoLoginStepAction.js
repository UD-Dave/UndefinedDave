const NavigationStepAction = require('./navigationStepAction');
const Promise = require('bluebird');

class SalesforceAutoLoginStepAction extends NavigationStepAction {
    async performAction() {
        let salesforceUrl = this.context.data.testimNavigationStepDestination || this.context.data.url;
        try {
            salesforceUrl = await this.updateBaseUrl(salesforceUrl);
            await this.driver.url(salesforceUrl);
            await Promise.delay(5000); // wait a little for the page to load (fixes screenshots and clicking on elements in username verification screen)
            let newUrl = await this.driver.getUrl();
            // Verify username screen
            const isUsernameVerificationNeeded = newUrl.includes(this.step.USERNAME_VERIFICATION_PATH_ID);
            const timeout = this.context.data.timeToPlayStep + 3000;
            if (isUsernameVerificationNeeded) {
                await this.driver.executeCodeAsync(`
                    function ${this.step.handleUsernameVerificationAUTFunc.toString()}
                    handleUsernameVerificationAUTFunc();
                    var done = arguments[1];
                    done();
                `, timeout);
                await Promise.delay(5000);
                newUrl = await this.driver.getUrl(); // If we managed to continue correctly we want to get the new redirected url
            }
            await Promise.delay(1500);
            return {
                success: true,
                newUrl,
            };
        } catch (err) {
            return {
                success: false,
                reason: err.message,
            };
        }
    }
}

module.exports = SalesforceAutoLoginStepAction;
