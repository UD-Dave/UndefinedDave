'use strict';

const StepAction = require('./stepAction');
const { extractElementId } = require('../../utils');
const { codeSnippets } = require('../../commons/getSessionPlayerRequire');
const selectOption = require('./scripts/selectOption');
const featureFlags = require('../../commons/featureFlags');

class SelectOptionStepAction extends StepAction {
    performAction() {
        const target = this.context.data[this.step.targetId || 'targetId'];
        const { seleniumElement, locatedElement } = target;

        return this.driver.getBrowserAndOS()
            .then(browserAndOS => {
                const browserMajor = browserAndOS.browserMajor;
                const isSafari = this.driver.isSafari();
                const isShadowed = Boolean(this.step.element && this.step.element.isShadowed);

                // TODO: Remove the special handling for safari < 12 after we upgrade our grid to safari 13.
                // force use js code when element is shadow dom
                if (!isSafari || (isSafari && browserMajor >= 13 && !isShadowed)) {
                    return this.driver.elementIdClick(extractElementId(seleniumElement));
                }

                const safariSelectOptionDispatchEventOnSelectElement = featureFlags.flags.safariSelectOptionDispatchEventOnSelectElement.isEnabled();
                const selectOptionCode = `
                    var getLocatedElement = ${codeSnippets.getLocatedElementCode};
                    var selectOption = ${selectOption.toString()};
                    return selectOption.apply(null, arguments);
                `;

                return this.driver.executeJSWithArray(selectOptionCode, [locatedElement, safariSelectOptionDispatchEventOnSelectElement])
                    .then(result => {
                        if (result.value && result.value.success) {
                            return { success: true };
                        }
                        return { success: false };
                    });
            });
    }
}

module.exports = SelectOptionStepAction;
